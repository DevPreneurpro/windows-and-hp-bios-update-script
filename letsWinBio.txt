
# Define paths for output folders and files
$outputFolder = "$HOME\\Desktop"
$padtZipFile = Join-Path $outputFolder "PSAppDeployToolkit_v3.8.4.zip"
$padtFolder = Join-Path $outputFolder "PSAppDeployToolkit"
$hpiaFolder = Join-Path $outputFolder "HPIA"

# Download and install the PowerShell App Deployment Toolkit
Write-Host "Downloading PowerShell App Deployment Toolkit..."
$url = "<https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/releases/download/3.8.4/PSAppDeployToolkit_v3.8.4.zip>"
Invoke-WebRequest -Uri $url -OutFile $padtZipFile

Write-Host "Unblocking PowerShell App Deployment Toolkit..."
Unblock-File -Path $padtZipFile

Write-Host "Extracting PowerShell App Deployment Toolkit..."
Expand-Archive -Path $padtZipFile -DestinationPath $padtFolder

Write-Host "Copying AppDeployToolkit and Files folders to HPIA folder..."
Copy-Item -Path "$padtFolder\\Toolkit\\AppDeployToolkit" -Destination "$hpiaFolder\\AppDeployToolkit" -Recurse
Copy-Item -Path "$padtFolder\\Toolkit\\Files" -Destination "$hpiaFolder\\Files"

# Download the HPIA installer
Write-Host "Downloading HPIA installer..."
$url = "<https://ftp.ext.hp.com/pub/caps-softpaq/cmit/HPIA.html>"
Invoke-WebRequest -Uri $url -OutFile "$hpiaFolder\\Files\\hp-hpia-5.1.7.exe"

# Install HPIA using the PowerShell App Deployment Toolkit
Write-Host "Installing HPIA using the PowerShell App Deployment Toolkit..."
Set-Location $hpiaFolder
$deploymentType = "Install"
$deployMode = "NonInteractive"
$deployScript = Join-Path $hpiaFolder "Deploy-HPIA.ps1"

@"
[ScriptBlock]::Create('
    [CmdletBinding()]
    Param()

    If ((Get-Process -Id $PID).SessionId -ne (Get-Process -Name "explorer" -ErrorAction SilentlyContinue).SessionId) {
        $deployMode = "NonInteractive"
    }

    ##*===============================================
    ##* PRE-INSTALLATION
    ##*===============================================
    function PreInstallation {
        # Set the installation file path
        $installerPath = Join-Path $dirFiles "hp-hpia-5.1.7.exe"

        # Set the installation arguments
        $installerArgs = "/s /v/qn"

        # Execute the installation
        Execute-Process -Path $installerPath -Parameters $installerArgs -IgnoreExitCodes "3010" -WindowStyle Hidden
    }

    ##*===============================================
    ##* POST-INSTALLATION
    ##*===============================================
    function PostInstallation {
        # Add a shortcut to the Start Menu
        $startMenuShortcutPath = Join-Path $dirCommonStartMenu "HP Image Assistant.lnk"
        $startMenuShortcutTarget = Join-Path $dirFiles "HPImageAssistant.exe"
        $startMenuShortcutArguments = ""
        $startMenuShortcutWorkingDirectory = $dirFiles
        $startMenuShortcutDescription = "HP Image Assistant"

        New-Shortcut -Path $startMenuShortcutPath -TargetPath $startMenuShortcutTarget -Arguments $startMenuShortcutArguments -WorkingDirectory $startMenuShortcutWorkingDirectory -Description $startMenuShortcutDescription
    }

    ##*===============================================
    ##* MAIN ENTRY POINT
    ##*===============================================
    ["
    $deployScriptContent = Get-Content $deployScript
    $deployScriptContent = $deployScriptContent -replace '\\[Pre-Installation\\]', '[Pre-Installation]; PreInstallation'
    $deployScriptContent = $deployScriptContent -replace '\\[Post-Installation\\]', '[Post-Installation]; PostInstallation'
    $deployScriptContent = $deployScriptContent -replace '\\[Exit-Script\\]', '[Exit-Script]'

    $deployScriptContent | Out-File $deployScript -Encoding UTF8
"@
Invoke-Expression $deployScript

